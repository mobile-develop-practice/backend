# Generated by Django 4.0.4 on 2022-06-06 08:16

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import drf_user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=254, unique=True, verbose_name='Unique UserName')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('mobile', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Mobile Number')),
                ('name', models.CharField(max_length=500, verbose_name='Full Name')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='user_images', verbose_name='Profile Photo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('is_active', models.BooleanField(default=False, verbose_name='Activated')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff Status')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', drf_user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OTPValidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=10, verbose_name='OTP Code')),
                ('destination', models.CharField(max_length=254, unique=True, verbose_name='Destination Address (Mobile/EMail)')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Is Validated')),
                ('validate_attempt', models.IntegerField(default=3, verbose_name='Attempted Validation')),
                ('prop', models.CharField(choices=[('E', 'EMail Address'), ('M', 'Mobile Number')], default='E', max_length=3, verbose_name='Destination Property')),
                ('send_counter', models.IntegerField(default=0, verbose_name='OTP Sent Counter')),
                ('sms_id', models.CharField(blank=True, max_length=254, null=True, verbose_name='SMS ID')),
                ('reactive_at', models.DateTimeField(verbose_name='ReActivate Sending OTP')),
            ],
            options={
                'verbose_name': 'OTP Validation',
                'verbose_name_plural': 'OTP Validations',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='RequestFriendship',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toRequestUser', to=settings.AUTH_USER_MODEL)),
                ('Sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofRequestUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('Receiver', 'Sender')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('IdentifierNumber', models.IntegerField()),
                ('Content', models.CharField(max_length=4096)),
                ('Type', models.CharField(choices=[('Text', 'Text'), ('Image', 'Image'), ('Audio', 'Audio'), ('Video', 'Video')], default='Text', max_length=5)),
                ('Date', models.DateTimeField(auto_now=True)),
                ('Receiver', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='toMessageUser', to=settings.AUTH_USER_MODEL)),
                ('Sender', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ofMessageUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Person1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofFriendUser', to=settings.AUTH_USER_MODEL)),
                ('Person2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toFriendUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('token', models.TextField(verbose_name='JWT Access Token')),
                ('session', models.TextField(verbose_name='Session Passed')),
                ('refresh_token', models.TextField(blank=True, verbose_name='JWT Refresh Token')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create Date/Time')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date/Time Modified')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Authentication Transaction',
                'verbose_name_plural': 'Authentication Transactions',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='Friends',
            field=models.ManyToManyField(related_name='FriendUser', through='drf_user.Friendship', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='Messages',
            field=models.ManyToManyField(related_name='MessageUser', to='drf_user.message'),
        ),
        migrations.AddField(
            model_name='user',
            name='Requests',
            field=models.ManyToManyField(related_name='RequestToUser', through='drf_user.RequestFriendship', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The roles this user belongs to. A user will get all permissions granted to each of their roles.', related_name='user_set', related_query_name='user', to='drf_user.role', verbose_name='Roles'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
